openapi: 3.0.0
servers:
  - url: https://services.osrsmillionaires.tk/account-administration
    description: External endpoint
  - url: http://svc-internal.services/account-administration
    description: Internal endpoint
info:
  version: 1.0.0
  title: Account Administration API
  termsOfService: 'http://swagger.io/terms/'
  contact:
    name: bottomfrag
    email: bottomfrag@osrsmillionaires.tk
  x-logo:
    url: 'https://redocly.github.io/redoc/petstore-logo.png'
    altText: Petstore logo
  license:
    name: Proprietary
    url: 'https://google.com'
tags:
  - name: general
    description: General endpoints
  - name: manage
    description: Endpoints for account management
  - name: status
    description: Endpoints for account status
  - name: 2fa
    description: Endpoints for 2fa settings
  - name: email
    description: Endpoints for email settings
x-tagGroups:
  - name: API Endpoints
    tags:
      - general
      - manage
      - status
      - 2fa
      - email
paths:
  /docs:
    get:
      operationId: getDocs
      summary: Gets the API Documentation
      description: Get the human-readable API docs for this API
      tags:
        - general
      responses:
        '200':
          description: HTML API Document
          content:
            text/html:
              schema:
                type: string
                example: <html><head></head><body>Documentation</body></html>
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /healthz:
    get:
      operationId: checkHealth
      summary: Check the health of this client
      description: Returns information about the health of this client, or an error if unhealthy.
      tags:
        - general
      parameters:
        - name: lod
          in: query
          description: Level of detail (lod) of status report (integer from 0 to MAX_LOD). Omit to provide MAX_LOD report.
          schema:
            type: integer
            minimum: 0
            default: 1
      responses:
        '200':
          description: Request Successful
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HealthCheck"
        '400':
          description: Invalid Input
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        '503':
          description: Unavailable
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HealthCheck"
  /readyz:
    get:
      operationId: checkReady
      summary: Check the readiness of this client
      description: Returns information about the readiness state of this client, or an error if not ready.
      tags:
        - general
      parameters:
        - name: lod
          in: query
          description: Level of detail (lod) of status report (integer from 0 to MAX_LOD). Omit to provide MAX_LOD report.
          schema:
            type: integer
            minimum: 0
            default: 1
      responses:
        '200':
          description: Request Successful
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ReadyCheck"
        '400':
          description: Invalid Input
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        '503':
          description: Unavailable
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ReadyCheck"
  /manage/create:
    post:
      operationId: manageCreate
      summary: Create a new account
      description: Creates a new osrs account with a given email
      tags:
        - manage
      requestBody:
        $ref: '#/components/requestBodies/ManageCreate'
      responses:
        '200':
          description: Operation Successful
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ManageCreateResponse"
        '400':
          description: Invalid Input
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        '500':
          description: Operation Failed
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /status/check:
    get:
      operationId: statusCheck
      summary: Check the status of an account
      description: Checks the status of an account for bans, locks and offenses
      tags:
        - status
      requestBody:
        $ref: '#/components/requestBodies/StatusCheck'
      responses:
        '200':
          description: Operation Successful
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StatusCheckResponse"
        '400':
          description: Invalid Input
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        '500':
          description: Operation Failed
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /2fa/enable:
    post:
      operationId: 2faEnable
      summary: Enable 2fa on an account
      description: Enables 2fa on an account and returns the OTP key used
      tags:
        - 2fa
      requestBody:
        $ref: '#/components/requestBodies/2faEnable'
      responses:
        '200':
          description: Operation Successful
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/2faEnableResponse"
        '304':
          description: Not Modified
        '400':
          description: Invalid Input
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        '500':
          description: Operation Failed
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /2fa/disable:
    post:
      deprecated: true
      operationId: 2faDisable
      summary: Disable 2fa on an account
      description: Disables 2fa on an account
      tags:
        - 2fa
      requestBody:
        $ref: '#/components/requestBodies/2faDisable'
      responses:
        '200':
          description: Operation Successful
        '304':
          description: Not Modified
        '400':
          description: Invalid Input
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        '500':
          description: Operation Failed
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /email/send-verification:
    post:
      deprecated: true
      operationId: emailSendVerification
      summary: Send email verification
      description: Sends an email verification request to the account's email.
      tags:
        - email
      requestBody:
        $ref: '#/components/requestBodies/EmailSendVerification'
      responses:
        '200':
          description: Operation Successful
        '304':
          description: Not Modified
        '400':
          description: Invalid Input
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        '500':
          description: Operation Failed
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /email/verify:
    post:
      deprecated: true
      operationId: emailVerify
      summary: Verify account email
      description: Attempts to login to the email service and verify an account.
      tags:
        - email
      requestBody:
        $ref: '#/components/requestBodies/EmailVerify'
      responses:
        '200':
          description: Operation Successful
        '304':
          description: Not Modified
        '400':
          description: Invalid Input
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        '500':
          description: Operation Failed
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
components:
  parameters:
    TabID:
      name: tabID
      in: path
      description: Identifier number of the tab in question. (number from 1..n where n is the number of tabs open on client)
      required: true
      schema:
        type: integer
        minimum: 1
  schemas:
    OtpKey:
      type: string
      description: key used for OTP generation
      example: HGJJHBSJNKN7567LJ
    DateOfBirthParams:
      type: object
      required:
        - date_of_birth
      properties:
        date_of_birth:
          type: string
          format: date-time 
          description: Date timestamp in ISO format to use as the birth day for the account
          example: "2018-03-20T00:00:00Z"
    AccountLoginParams:
      type: object
      required:
        - username
        - password
      properties:
        username:
          type: string
          description: Username used to login to the account
          example: my-account@gmail.com
        password:
          type: string
          description: Password used to login to the account
          example: examplepassword
    AccountLoginWithOtpParams:
      type: object
      required:
        - username
        - password
      properties:
        username:
          type: string
          description: Username used to login to the account
          example: my-account@gmail.com
        password:
          type: string
          description: Password used to login to the account
          example: examplepassword
        otpKey:
          $ref: '#/components/schemas/OtpKey'
    ProxyParams:
      type: object
      properties:
        proxyHost:
          type: string
          description: Hostname of the proxy to use while modifying account settings
          example: us3300.nordvpn.com
        proxyPort:
          type: integer
          description: Port of the proxy to use while modifying acount settings
          example: 1080
        proxyUsername:
          type: string
          description: Username used to authenticate to the proxy
          example: exampleusername
        proxyPassword:
          type: string
          description: Password used to authenticate to the proxy
          example: examplepassword
    EmailLoginParams:
      type: object
      required:
        - email
        - emailPassword
      properties:
        email:
          type: string
          format: email
          description: Email associated with the account (must be valid email)
          example: my-account@gmail.com
        emailPassword:
          type: string
          description: Password used to login to the account's email
          example: exampleemailpassword
    ManageCreateResponse:
      type: object
      required:
        - username
        - password
        - date_of_birth
      properties:
        username:
          type: string
          description: Username of the new account
          example: newaccount@gmail.com
        password:
          type: string
          description: Password of the new account
          example: examplepassword
        date_of_birth:
          type: string
          description: Date of birth in ISO format used to create the account
          example: "2020-06-01T00:00:00.000Z"
    StatusCheckResponse:
      type: object
      required:
        - status
      properties:
        status:
          type: string
          enum:
            - active
            - locked
            - banned
          description: Status of the account
          example: banned
        offences:
          type: array
          nullable: true
          description: List of offences on the account. Will be null if unable to access the account status page due to a lock or other cause.
          items:
            type: object
            properties:
              date:
                type: string
                description: Date of the offence
                example: 02-Apr-2020
              offence:
                type: string
                description: The name of the offence
                example: Macroing Major (ban)
    2faEnableResponse:
      type: object
      properties:
        otpKey:
          type: string
          description: key used for OTP generation
          example: HGJJHBSJNKN7567LJ
    World: # add world range validation
      type: integer
      example: 318
    URL:
      type: string
      format: url
      example: https://example.com
    Error:
      type: object
      required:
        - code
        - error
        - message
        - path
      properties:
        code:
          type: integer
          format: int32
          description: Error code assigned based on the type of failure (different from status)
          example: 23
        error:
          type: string
          description: Detailed message about the error
          example: "Invalid response for status code 200: should have required property 'name'"
        message:
          type: string
          description: General message about the error
          example: The response was not valid.
        path:
          type: string
          description: What caused the error
          example: "accountUsername"
    HealthCheck:
      type: object
      properties:
        api_version:
          anyOf:
          - type: string
          - $ref: '#/components/schemas/Error'
    ReadyCheck:
      type: object
      properties:
        apiserver_running:
          anyOf:
          - type: boolean
          - $ref: '#/components/schemas/Error'
  requestBodies:
    ManageCreate:
      description: Request body with parameters for creating an account
      required: true
      content:
        application/json:
          schema:
            allOf:
              - $ref: '#/components/schemas/AccountLoginParams'
              - $ref: '#/components/schemas/DateOfBirthParams'
              - $ref: '#/components/schemas/ProxyParams'
    StatusCheck:
      description: Request body with parameters for checking the status of an account
      required: true
      content:
        application/json:
          schema:
            allOf:
              - $ref: '#/components/schemas/AccountLoginWithOtpParams'
              - $ref: '#/components/schemas/ProxyParams'
    2faEnable:
      description: Request body with parameters for enabling 2fa
      required: true
      content:
        application/json:
          schema:
            allOf:
              - $ref: '#/components/schemas/AccountLoginParams'
              - $ref: '#/components/schemas/ProxyParams'
    2faDisable:
      description: Request body with parameters for disabling 2fa
      required: true
      content:
        application/json:
          schema:
            allOf:
              - $ref: '#/components/schemas/AccountLoginWithOtpParams'
              - $ref: '#/components/schemas/ProxyParams'
    EmailSendVerification:
      description: Request body with parameters for sending a verification email
      required: true
      content:
        application/json:
          schema:
            allOf:
              - $ref: '#/components/schemas/AccountLoginParams'
              - $ref: '#/components/schemas/ProxyParams'
    EmailVerify:
      description: Request body with parameters for verifying an email
      required: true
      content:
        application/json:
          schema:
            allOf:
              - $ref: '#/components/schemas/AccountLoginParams'
              - $ref: '#/components/schemas/EmailLoginParams'
              - $ref: '#/components/schemas/ProxyParams'
  securitySchemes:
    petstore_auth:
      description: |
        Get access to data while protecting your account credentials.
        OAuth2 is also a safer and more secure way to give you access.
      type: oauth2
      flows:
        implicit:
          authorizationUrl: 'http://petstore.swagger.io/api/oauth/dialog'
          scopes:
            'write:pets': modify pets in your account
            'read:pets': read your pets
    api_key:
      description: >
        For this sample, you can use the api key `special-key` to test the
        authorization filters.
      type: apiKey
      name: api_key
      in: header
  examples:
    Order:
      value:
        quantity: 1,
        shipDate: 2018-10-19T16:46:45Z,
        status: placed,
        complete: false

